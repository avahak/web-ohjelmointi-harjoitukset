PAGES TO HANDLE ACCOUNT MANAGEMENT:
(functions: signup, login, reset password, change password, resend verification email)
- signup
    - link to resend verification email
- login
    - link to reset_password
- reset_password
    - sends email with link back to same page with ?key=..
- change_password
    - 


PHP SYNTAX
  - $name = "kissa"; $$name = "mau"; echo $kissa;
  - variable unpacking: [$x, $y, $z] = $row->fetch_assoc();
  - variables into an associative array: compact($x, $y)

function f(
    string $name,
    string $value = "",
    int $expires_or_options = 0,
    string $path = "",
    string $domain = "",
    bool $secure = false,
    bool $httponly = false
): string {
    return $httponly ? "T" : "F";
}

echo f("myCookie", "cookieValue", time() + 3600, httponly: false);


TODO
    - fix remember_me converting to session automatically (make common header?)
    - secure_page(); asettaa $_SESSION["target_page"] = $_SERVER["PHP_SELF"]; secure page alussa, ohjaa login sivulle jos ei logged in
    - !!! Selvitä hyvä keino "Email is already used" sijasta (signup, login, forgot password)
    - insert_id -> affected_rows vois olla parempi (voi käyttää update, others too?)
    - findstr /s /i /m "str_to_find" *.php
    - $base64EncodedData = base64_encode(...); 
      $urlEncodedData = urlencode($base64EncodedData);
    - $stmt.bind_result($user_id, $email) $result=$stmt.fetch_assoc(); 
        return compact('users_id,email');
    - static $conn; if ($conn) return $conn; static?
    - testaa autocomplete="on", autofocus
    - remember me (mikä täsmälleen on?)
    - email verification
    - reset password
    - admin toiminnallisuus (user deactivate, activate esim. työntekijälopettaa -> deaktivoi, aloittaa uudellen työt-> aktivoi - ei tartte joka kerta tehdä uutta käyttäjää)
    - kirjautumisen ohjaaminen aiotulle sivulle
    - (uuden email verifikaatiosähköpostin lähetys...? ehkä loginiin loogista, helppoa?)
    - suojatut sivut - php alkuun vaan verifyIsLoggedin()
    - deploy azure

    - tokens db: (id,user_id,selector,hashed_validator,expiry)
      generate random selector,random validator,hash validator,
       give user validator as token,user comes back=>hash users validator and compare to 
       db hashed validator found based on selector from user 
       (SELECT id, selector, hashed_validator, user_id, expiry FROM user_tokens WHERE selector=user selector)
       (so: user gets selector,validator, db gets selector,hashed validator)
       (prevents timing attacks)


-ympäristön selvittöminen (esim sql asetuksia varten):  (?)
  $is_local_setting = in_array($_SERVER['REMOTE_ADDR'],array('127.0.0.1','::1'));
  if (!$is_local_setting) { // azure settings } else { //local settings }
  $is_azure_setting = (strpos($_SERVER['HTTP_HOST']), 'azurewebsites') !== false);
  azuressa voi joutua hakeen asetuksia ympärisömuuttujista getenv(..) tai $_ENV[..]
- voisi DEFINE sijasta laittaa putenv, sitten voisi aina myöh käyttää getenv

substr($hash, 0, 8) is hash too

email: mailtrap.io ? (send test emails)
        (https://github.com/PHPMailer/PHPMailer ?)
azure files: ympäristömuuttujat:
        settings-configureation -> application settings -> luo ympäristömuuttujat (json)
        -> getenv('muuttujan_nimi')